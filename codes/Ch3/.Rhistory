Z0 <- rchisq(100, df = 0, ncp = 2.)
graphics::stem(Z0)
graphics::stem(Z0)
Z0 <- rchisq(100, df = 0, ncp = 2.)
plot(Z0)
Z0 <- rchisq(1000, df = 0, ncp = 2.)
plot(Z0)
dchisq(1, df = 1:3)
pchisq(1, df =  3)
pchisq(1, df =  3, ncp = 0:4)  # includes the above
dchisq(1, df = 1:100)
df = 1:100
dchisq(1, df)
plot(dchisq(1, df))
plot(dchisq(3, df))
plot(dchisq(6, df))
df = 1:100
k = 1 # experiment with different values for k
plot(dchisq(k, df))
df = 1:100
k = 2 # experiment with different values for k
plot(dchisq(k, df))
df = 1:100
k = 8 # experiment with different values for k
plot(dchisq(k, df))
df = 1:100
k = 80 # experiment with different values for k
plot(dchisq(k, df))
df = 1:1000
df
df = 1:1000
df
k = 2 # experiment with different values for k
plot(dchisq(k, df))
df = 1:1000
df
k = 20 # experiment with different values for k
plot(dchisq(k, df))
df = 1:1000
df
k = 20 # experiment with different values for k
plot(rchisq(k, df))
df = 1:1000
df
k = 20 # experiment with different values for k
plot(dchisq(k, df))
df = 1:1000
df
k = 200 # experiment with different values for k
plot(dchisq(k, df))
y <- rnorm(2000,mean=-2,sd=4)
hist(y)
plot(qchisq(k, df))
dchisq(1, df = 1:3)
pchisq(1, df =  3)
pchisq(1, df =  3, ncp = 0:4)  # includes the above
dchisq(1, df = 1:3)
df = 1:1000
df
k = 200 # experiment with different values for k
plot(dchisq(k, df))
plot(qchisq(k, df))
plot(dchisq(k, df))
df = 1:2000
df
k = 100 # experiment with different values for k
plot(dchisq(k, df))
plot(qchisq(k, df))
plot(qchisq(k, df))
plot(dchisq(k, df))
<- data("iris")
a
a <- data.frame("iris")
a
a <- data.frame(iris)
a
qqnorm(a)
qqnorm(a$Sepal.Width)
qqnorm(a$Sepal.Length)
qqnorm(a$Petal.Length)
qqnorm(a$Petal.Width)
t.test(1:10, y = c(1:20))
t.test(1:10, y = c(1:10))
#-------- T test -------------
t.test(1:10, c(1:10)) # p-value =1, which is exactly the same ...
t.test(1:10, y = c(5:10)) # p-value =1
t.test(1:10, y = c(0:10)) # p-value =1
t.test(1:10, 1:10) # p-value =1, which is the most catasrophic case
t.test(1:10, 15:25)
t.test(1:10, 1:25)
t.test(1:10, 1:15)
t.test(1:10, 1:11)
t.test(1:100, 1:110)
t.test(1:100, 1:10)
t.test(1:100, 1:100)
t.test(1:100, 50:150)
t.test(1:100, 100:150)
t.test(1:100, 70:100)
t.test(1:100, 70:170)
t.test(1:100, 10:170)
t.test(1:100, 10:110)
t.test(1:100, 10:120) # there is a significant differences
t.test(1:9,mu=3)
t.test(1:100,mu=3)
t.test(1:9,mu=3)
t.test(1:12,mu=3)
qqnorm(a$Sepal.Length) # is normaly distributed
qqnorm(a$Petal.Length)
t.test(1:10, 1:10) # p-value =1, which is the most catasrophic case
t.test(1:100, 10:120) # there is a significant differences
t.test(1:100, 10:120) # there is a significant differences
t.test(y2, y3) # there is a significant differences
y1= c(1:10)
y2= c(1:100)
y3= c(10:120)
t.test(y1,y2,paired=TRUE)
t.test(y2,y3,paired=TRUE)
y2= c(1:100)
y3= c(11:110)
t.test(y2,y3,paired=TRUE)
y1<- c(1:10)
y2<- c(1:100)
y3<- c(11:110)
t.test(y1, 1:10)
t.test(y2, y3) # there is a significant differences
t.test(y1,mu=3)
t.test(y2,y3,paired=TRUE)
t.test(y2,y2,paired=TRUE)
t.test(y2,y2,paired=TRUE, alternative = "two.sided")
t.test(y2,y2,paired=TRUE, alternative = "two.sided")
t.test(y2,y3,paired=TRUE, alternative = "two.sided")
y2<- c(1:100)
y3<- c(10:110)
t.test(y2,y3,paired=TRUE, alternative = "two.sided")
y3<- c(11:110)
t.test(y2,y3,paired=TRUE, alternative = "two.sided")
t.test(before,after,paired=TRUE, alternative = "two.sided")
before <-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)
after <-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)
t.test(before,after,paired=TRUE, alternative = "two.sided")
# Paired t-test
before <-c(200.1, 190.9, 192.7, 213, 241.4, 196.9, 172.2, 185.5, 205.2, 193.7)
after <-c(392.9, 393.2, 345.1, 393, 434, 427.9, 422, 383.9, 392.3, 352.2)
t.test(before,after,paired=TRUE)
#------ KS test -----------
x <- rnorm(50) #  generates a vector of normally distributed random numbers
x
y <- runif(20) #  generates a vector of uniformly distributed random numbers
y
ks.test(x,y)
library(ggplot2)
sample1<-rnorm(100)
sample2<-rnorm(120, 2, 2)
group <- c(rep("sample1", length(sample1)), rep("sample2", length(sample2)))
dat <- data.frame(KSD = c(sample1,sample2), group = group)
cdf1 <- ecdf(sample1)
cdf2 <- ecdf(sample2)
minMax <- seq(min(sample1, sample2), max(sample1, sample2), length.out=length(sample1))
x0 <- minMax[which( abs(cdf1(minMax) - cdf2(minMax)) == max(abs(cdf1(minMax) - cdf2(minMax))) )]
y0 <- cdf1(x0)
y1 <- cdf2(x0)
ggplot(dat, aes(x = KSD, group = group, colour = group, linetype=group))+
stat_ecdf(size=1) +
xlab("X") +
ylab("Cumulitive Distibution") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "black") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=1) +
geom_point(aes(x = x0[1] , y= y1[1]), color="blue", size=1) +
theme(panel.background = element_rect(fill='white', colour='black'))
ggplot(dat, aes(x = KSD, group = group, colour = group, linetype=group))+
stat_ecdf(size=1) +
xlab("X") +
ylab("Cumulative Distibution") +
geom_segment(aes(x = x0[1], y = y0[1], xend = x0[1], yend = y1[1]),
linetype = "dashed", color = "black") +
geom_point(aes(x = x0[1] , y= y0[1]), color="red", size=1) +
geom_point(aes(x = x0[1] , y= y1[1]), color="blue", size=1) +
theme(panel.background = element_rect(fill='white', colour='black'))
