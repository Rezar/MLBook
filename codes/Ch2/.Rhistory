install.packages("timevis")
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Item one", "Item two",
"Ranged item", "Item four"),
start   = c("2016-01-10", "2016-01-11",
"2016-01-20", "2016-02-14 15:00:00"),
end     = c(NA, NA, "2016-02-04", NA)
)
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Carbs", "Eating Fats",
"Ranged item", "Item four"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14 15:00:00"),
end     = c(NA, NA, "2016-02-04", NA)
)
timevis(data)
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c(NA, NA, "2016-02-04", NA)
)
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-16", NA, "2016-02-04", NA)
)
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-19", NA, "2016-02-04", NA)
)
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-19", NA, "2019-01-29", NA)
)
timevis(data)
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-19", NA, "2019-02-10", NA))
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-14",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-13",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
timevis(data)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-11",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
timevis(data)
# http://margintale.blogspot.in/2012/04/ggplot2-time-series-heatmaps.html
library(ggplot2)
library(plyr)
library(scales)
library(zoo)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/yahoo.csv", header=TRUE, sep=",")
df$date <- as.Date(df$date)  # format date
df <- df[df$year >= 2012, ]  # filter reqd years
# Create Month Week
df$yearmonth <- as.yearmon(df$date)
df$yearmonthf <- factor(df$yearmonth)
df <- ddply(df,.(yearmonthf), transform, monthweek=1+week-min(week))  # compute week number of month
df <- df[, c("year", "yearmonthf", "monthf", "week", "monthweek", "weekdayf", "VIX.Close")]
head(df)
# Plot
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_gradient(low="blue", high="red") +
labs(x="Week of Month",
y="",
title = "Calendar plot example",
subtitle="",
fill="Close")
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-11",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
timevis(data)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
df
violin(df)
ggplot(df, aes(x = factor(cyl), y = mpg)) +
geom_violin(aes(fill = factor(cyl)))
ggplot(df, aes(x = factor(total_bill), y = mpg)) +
geom_violin(aes(fill = factor(total_bill)))
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(df, aes(x = factor(total_bill), y = mpg)) +
geom_violin(aes(fill = factor(total_bill)))
ggplot(df,
aes(x = factor(total_bill), y = mpg)) + geom_violin(aes(fill = factor(total_bill)))
ggplot(df,
aes(x = factor(total_bill), y = mpg)) + geom_violin() )
ggplot(df,
aes(x = factor(total_bill), y = mpg) + geom_violin() )
ggplot(mtcars,
aes(x = factor(cyl), y = mpg) + geom_violin() )
ggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(cyl))) +
geom_violin()
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin()
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.2)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.09)
# fill = factor(cyl)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
mtcars
ggplot(df, aes(x = factor(total_bill), tip = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
ggplot(df, aes(x = factor(total_bill), y = tip)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(df, aes(x = factor(total_bill), y = size)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
# fill = factor(cyl)
mtcars
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(df, aes(x = factor(total_bill), y = size)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
library("ggplot2")
library("ggthemes")
library("extrafont")
library("plyr")
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/violin_data.csv", header=TRUE, sep=",")
ggplot(df, aes(x = factor(total_bill), y = size)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
mtcars
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) +
#theme_bw()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# fill = factor(cyl)
mtcars
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) +
#theme_bw()
theme(panel.grid.major = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# fill = factor(cyl)
mtcars
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) +
#theme_bw()
theme(panel.grid.major = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# fill = factor(cyl)
mtcars
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-11",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) +
#theme_bw()
theme(
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# fill = factor(cyl)
ggplot(df, aes(x = factor(total_bill), y = size)) +
geom_violin() +
geom_boxplot(width = 0.1) + theme_bw()
dat %>% mutate(group = reorder(group, value, median)) %>%
ggplot(aes(group, value)) + geom_violin(fill = "blue")
library(ggjoy)
dat %>% mutate(group = reorder(group, value, median)) %>%
ggplot(aes(group, value)) + geom_violin(fill = "blue")
mutate(group = reorder(group, value, median)) %>%
ggplot(aes(group, value)) + geom_violin(fill = "blue")
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_violin() +
geom_boxplot(width = 0.1) +
#theme_bw()
theme(
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# fill = factor(cyl)
mtcars
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len")
install.packages("ggpubr")
library("ggpubr")
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len")
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len", add = "boxplot")
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="example",
xlab=â€œx label",   col=c("blue","red"),
legend = rownames(counts), beside=TRUE) # col=topo.colors(5), main="topo.colors"
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="example",
xlab="x label,   col=c("blue","red"),
legend = rownames(counts), beside=TRUE) # col=topo.colors(5), main="topo.colors"
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len", add = "boxplot")
mtcars
ToothGrowth
cone <- function(x, y){
sqrt(x^2+y^2)
}
x <- y <- seq(-1, 1, length= 18)
z <- outer(x, y, cone)
persp( x, y, z, phi = 25, theta = 45,
xlab = "X Coordinate",
ylab = "Y Coordinate",
zlab = "Z Coordinate",
main = "Surface plot example",
col = "antiquewhite", shade = 0.5)
library("ggplot2")
library("ggthemes")
library("extrafont")
library("plyr")
df2 <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/copper-data-for-tutorial.csv" , header=TRUE, sep=",")
df2
p2 <- ggplot() + geom_area(aes(y = export, x = year, fill = product), data = df2,  stat="identity")
p2
cone <- function(x, y){
sqrt(x^2+y^2)
}
x <- y <- seq(-1, 1, length= 18)
z <- outer(x, y, cone)
persp( x, y, z, phi = 25, theta = 45,
xlab = "X Coordinate",
ylab = "Y Coordinate",
zlab = "Z Coordinate",
main = "Surface plot example",
col = "antiquewhite", shade = 0.5)
library("ggplot2")
library("ggthemes")
library("extrafont")
library("plyr")
df2 <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/copper-data-for-tutorial.csv" , header=TRUE, sep=",")
df2
p2 <- ggplot() + geom_area(aes(y = export, x = year, fill = product), data = df2,  stat="identity")
p2
# read more about it here: http://t-redactyl.io/blog/2015/12/creating-plots-in-r-using-ggplot2-part-2-area-plots.html
x <- c(12,23,40,35,13,34,25,15,17,32,23,36,33,31)
y <- c(10,13,35,35,32,23,32,37,23,34,35,15,17,32)
z <- c(23,26,25,15,13,14,31,13,17,37,23,31,33,12)
df <- cbind(x,y,z)
heatmap(df, scale = "none")
# http://margintale.blogspot.in/2012/04/ggplot2-time-series-heatmaps.html
library(ggplot2)
library(plyr)
library(scales)
library(zoo)
df <- read.csv("/Users/rawassizadeh/EVERYTHING/Work/TEACHING/CS\ 688\ -\ Web\ Analytics\ and\ Mining/Session\ 2/yahoo.csv", header=TRUE, sep=",")
df$date <- as.Date(df$date)  # format date
df <- df[df$year >= 2012, ]  # filter reqd years
# Create Month Week
df$yearmonth <- as.yearmon(df$date)
df$yearmonthf <- factor(df$yearmonth)
df <- ddply(df,.(yearmonthf), transform, monthweek=1+week-min(week))  # compute week number of month
df <- df[, c("year", "yearmonthf", "monthf", "week", "monthweek", "weekdayf", "VIX.Close")]
head(df)
# Plot
ggplot(df, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") +
facet_grid(year~monthf) +
scale_fill_gradient(low="blue", high="red") +
labs(x="Week of Month",
y="",
title = "Calendar plot example",
subtitle="",
fill="Close")
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Eating Lots of Carbs", "Eating Lots of Fats",
"Staying in hospital", "Start Excersize"),
start   = c("2019-01-10", "2019-01-11",
"2019-01-20", "2019-02-14"),
end     = c("2019-01-20", "2019-01-20", "2019-02-10", NA))
timevis(data)
dat %>% mutate(group = reorder(group, value, median)) %>%
ggplot(aes(group, value)) + geom_violin(fill = "blue")
ToothGrowth
library(ggjoy)
dat %>% mutate(group = reorder(group, value, median)) %>%
ggplot(aes(group, value)) + geom_violin(fill = "blue")
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len", add = "boxplot")
library("ggpubr")
data("ToothGrowth")
df <- ToothGrowth
ggviolin(df, x = "dose", y = "len", add = "boxplot")
----
install.packages("devtools")
library("devtools")
devtools::install_github("mattflor/chorddiag")
library("chorddiag")
mymat <-  cbind(c(0,3,12,6), c(2,0,9,8), c(3,5,0,7), c(4,9,6,0))
plot(mymat)
mat = matrix(1:25, 5)
rownames(mat) = letters[1:5]
colnames(mat) = LETTERS[1:5]
mat
chorddiag(mat)
ab <- as.matrix(mymat)
colnames(ab) = LETTERS[1:4]
ab
chorddiag(ab)
library("geoR")
install.packages("geoR")
library("geoR")
library("geoR")
